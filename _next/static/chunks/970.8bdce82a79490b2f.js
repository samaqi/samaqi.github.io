(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[970],{3970:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>ee});var i=n(7437),r=n(2265),a=n(6290),l=n(8344);n(983);var s=n(842),o=n(6548),m=n(1538);let u=function(){return(0,i.jsx)(m.Z,{className:"homepage",p:2,children:(0,i.jsxs)(s.Z,{container:!0,spacing:4,justifyContent:"center",children:[(0,i.jsx)(s.Z,{item:!0,children:(0,i.jsxs)(m.Z,{textAlign:"center",display:"flex",flexDirection:"column",alignItems:"center",children:[(0,i.jsx)("img",{src:"/moggle-drink-ff14.jpeg",className:"App-logo-circle",alt:"logo"}),(0,i.jsx)(o.Z,{component:a.rU,to:"/triple_triad",variant:"contained",color:"primary",className:"App-button",style:{marginTop:"10px"},children:"Play Triple Triad"})]})}),(0,i.jsx)(s.Z,{item:!0,children:(0,i.jsxs)(m.Z,{textAlign:"center",display:"flex",flexDirection:"column",alignItems:"center",children:[(0,i.jsx)("img",{src:"/img/cactaur_punching.gif",className:"App-logo-circle",alt:"Cactaur Punching"}),(0,i.jsx)(o.Z,{component:a.rU,to:"/world",variant:"contained",color:"primary",className:"App-button",style:{marginTop:"10px"},children:"Explore FFVIII-2"})]})})]})})};n(9073);let d=function(e){let{card:t,handleChoice:n,played:r}=e,a={width:`${t.width}px`,height:`${t.height}px`,backgroundImage:`url(${t.src})`,backgroundPosition:`-${t.x}px -${t.y}px`,backgroundSize:`${28*t.width}px ${4*t.height}px`},l=["card"];r&&l.push("played");let s=l.join(" "),o=["number"];"hidden_card"===t.name?o.push("hidden"):"red"===t.color?o.push("red"):"blue"===t.color&&o.push("blue");let m=o.join(" ");return(0,i.jsxs)("div",{className:s,onClick:()=>{n(t)},style:a,children:[(0,i.jsxs)("div",{className:m,children:["--",t.up,"--"]}),(0,i.jsxs)("div",{className:m,children:[t.left,"----",t.right]}),(0,i.jsxs)("div",{className:m,children:["--",t.down,"--"]})]})};var c=n(9591),h=n(511),p=n(6645),b=n(4691),g=n(8884),y=n(7116),N=n(6351);let v=e=>{let{newTripleTriadGame:t}=e,[n,a]=(0,r.useState)([{name:"Geezard",quantity:10},{name:"Funguar",quantity:10},{name:"Bite Bug",quantity:10},{name:"Red Bat",quantity:10},{name:"Blobra",quantity:10},{name:"Gayla",quantity:10},{name:"Gesper",quantity:10},{name:"Fastitocalon-F",quantity:10},{name:"Blood Soul",quantity:10},{name:"Caterchipillar",quantity:10},{name:"Cockatrice",quantity:10},{name:"Grat",quantity:10},{name:"Buel",quantity:10},{name:"Mesmerize",quantity:10},{name:"Glacial Eye",quantity:10},{name:"Belhelmel",quantity:10},{name:"Thrustaevis",quantity:10},{name:"Anacondaur",quantity:10},{name:"Creeps",quantity:10},{name:"Grendel",quantity:10},{name:"Jelleye",quantity:10},{name:"Grand Mantis",quantity:10},{name:"Forbidden",quantity:10},{name:"Armadodo",quantity:10},{name:"Tri-Face",quantity:10},{name:"Fastitocalon",quantity:10},{name:"Snow Lion",quantity:10},{name:"Ochu",quantity:10},{name:"SAM08G",quantity:10},{name:"Death Claw",quantity:10},{name:"Cactuar",quantity:10},{name:"Tonberry",quantity:10},{name:"Abyss Worm",quantity:10},{name:"Turtapod",quantity:10},{name:"Vysage",quantity:10},{name:"T-Rexaur",quantity:10},{name:"Bomb",quantity:10},{name:"Blitz",quantity:10},{name:"Wendigo",quantity:10},{name:"Torama",quantity:10},{name:"Imp",quantity:10},{name:"Blue Dragon",quantity:10},{name:"Adamantoise",quantity:10},{name:"Hexadragon",quantity:10},{name:"Iron Giant",quantity:10},{name:"Behemoth",quantity:10},{name:"Chimera",quantity:10},{name:"PuPu",quantity:10},{name:"Elastoid",quantity:10},{name:"GIM47N",quantity:10},{name:"Malboro",quantity:10},{name:"Ruby Dragon",quantity:10},{name:"Elnoyle",quantity:10},{name:"Tonberry King",quantity:10},{name:"Wedge, Biggs",quantity:10},{name:"Fujin Raijin",quantity:10},{name:"Elvoret",quantity:10},{name:"X-ATM092",quantity:10},{name:"Granaldo",quantity:10},{name:"Gerogero",quantity:10},{name:"Iguion",quantity:10},{name:"Abadon",quantity:10},{name:"Trauma",quantity:10},{name:"Oilboyle",quantity:10},{name:"Shumi",quantity:10},{name:"Krysta",quantity:10},{name:"Propagator",quantity:10},{name:"Jumbo Cactuar",quantity:10},{name:"Tri-Point",quantity:10},{name:"Gargantua",quantity:10},{name:"Mobile Type 8",quantity:10},{name:"Sphinxara",quantity:10},{name:"Tiamat",quantity:10},{name:"BGH251F2",quantity:10},{name:"Red Giant",quantity:10},{name:"Catoblepas",quantity:10},{name:"Ultima Weapon",quantity:10},{name:"Chubby Chocobo",quantity:1},{name:"Angelo",quantity:1},{name:"Gilgamesh",quantity:1},{name:"MiniMog",quantity:1},{name:"Chicobo",quantity:1},{name:"Quezacotl",quantity:1},{name:"Shiva",quantity:1},{name:"Ifrit",quantity:1},{name:"Siren",quantity:1},{name:"Sacred",quantity:1},{name:"Minotaur",quantity:1},{name:"Carbuncle",quantity:1},{name:"Diablos",quantity:1},{name:"Leviathan",quantity:1},{name:"Odin",quantity:1},{name:"Pandemona",quantity:1},{name:"Cerberus",quantity:1},{name:"Alexander",quantity:1},{name:"Phoenix",quantity:1},{name:"Bahamut",quantity:1},{name:"Doomtrain",quantity:1},{name:"Eden",quantity:1},{name:"Ward",quantity:1},{name:"Kiros",quantity:1},{name:"Laguna",quantity:1},{name:"Selphie",quantity:1},{name:"Quistis",quantity:1},{name:"Irvine",quantity:1},{name:"Zell",quantity:1},{name:"Rinoa",quantity:1},{name:"Edea",quantity:1},{name:"Seifer",quantity:1},{name:"Squall",quantity:1}]),[l,s]=(0,r.useState)([]),[u,d]=(0,r.useState)(null),[v,f]=(0,r.useState)(!0),E=(0,r.useCallback)(e=>{d(e)},[]),x=(0,r.useCallback)((e,t)=>{t.stopPropagation(),0===e.quantity||l.reduce((e,t)=>e+t.quantity,0)>=5||(console.log(`Card clicked: ${e.name}`),s(t=>{let n=t.findIndex(t=>t.name===e.name);if(-1===n)return[...t,{...e,quantity:1}];{let e=[...t];return e[n].quantity+=1,e}}),a(t=>{let n=t.findIndex(t=>t.name===e.name);if(-1!==n){let e=[...t];return e[n].quantity-=1,e}return t}))},[l]),_=(0,r.useCallback)((e,t)=>{t.stopPropagation(),console.log(`Selected card clicked: ${e.name}`),s(t=>{let n=t.findIndex(t=>t.name===e.name);if(-1!==n){let e=[...t];return e[n].quantity>1?e[n].quantity-=1:e.splice(n,1),e}return t}),a(t=>{let n=t.findIndex(t=>t.name===e.name);if(-1!==n){let e=[...t];return e[n].quantity+=1,e}return t})},[]),O=l.reduce((e,t)=>e+t.quantity,0);if(!v)return null;let A=Math.ceil(n.length/2),q=n.slice(0,A),C=n.slice(A);return(0,i.jsx)(m.Z,{className:"select-card-menu",p:2,children:(0,i.jsxs)(m.Z,{className:"cards-container",display:"flex",justifyContent:"space-between",children:[(0,i.jsxs)(m.Z,{className:"stock-cards",flex:3,mr:2,children:[(0,i.jsx)(h.Z,{variant:"h5",style:{marginBottom:"10px"},children:"Stock Cards"}),(0,i.jsx)(m.Z,{style:{overflowY:"auto",maxHeight:"75vh"},children:(0,i.jsxs)(m.Z,{display:"flex",children:[(0,i.jsx)(m.Z,{flex:1,mr:2,children:(0,i.jsxs)(p.Z,{children:[(0,i.jsx)(b.Z,{children:(0,i.jsxs)(y.Z,{children:[(0,i.jsx)(N.Z,{children:"Card"}),(0,i.jsx)(N.Z,{children:"Quantity"})]})}),(0,i.jsx)(g.Z,{children:q.map((e,t)=>(0,i.jsxs)(c.E.tr,{initial:{x:"-20vw"},animate:{x:-10},onMouseEnter:()=>E(e),onClick:t=>x(e,t),style:{cursor:0===e.quantity?"not-allowed":"pointer",opacity:0===e.quantity?.5:1},children:[(0,i.jsx)(N.Z,{children:e.name}),(0,i.jsx)(N.Z,{children:e.quantity})]},t))})]})}),(0,i.jsx)(m.Z,{flex:1,ml:2,children:(0,i.jsxs)(p.Z,{children:[(0,i.jsx)(b.Z,{children:(0,i.jsxs)(y.Z,{children:[(0,i.jsx)(N.Z,{children:"Card"}),(0,i.jsx)(N.Z,{children:"Quantity"})]})}),(0,i.jsx)(g.Z,{children:C.map((e,t)=>(0,i.jsxs)(c.E.tr,{initial:{x:"-20vw"},animate:{x:-10},onMouseEnter:()=>E(e),onClick:t=>x(e,t),style:{cursor:0===e.quantity?"not-allowed":"pointer",opacity:0===e.quantity?.5:1},children:[(0,i.jsx)(N.Z,{children:e.name}),(0,i.jsx)(N.Z,{children:e.quantity})]},t))})]})})]})})]}),(0,i.jsxs)(m.Z,{className:"card-preview",flex:2,ml:2,style:{position:"sticky",top:0},children:[(0,i.jsx)(h.Z,{variant:"h5",children:"Card Preview"}),u?(0,i.jsx)(m.Z,{children:(0,i.jsx)(h.Z,{children:u.name})}):(0,i.jsx)(h.Z,{children:"Click a card to select/deselect"})]}),(0,i.jsxs)(m.Z,{className:"selected-cards",flex:2,ml:2,style:{position:"sticky",top:0},children:[(0,i.jsx)(h.Z,{variant:"h5",children:"Selected Cards"}),(0,i.jsxs)(p.Z,{children:[(0,i.jsx)(b.Z,{children:(0,i.jsxs)(y.Z,{children:[(0,i.jsx)(N.Z,{children:"Card"}),(0,i.jsx)(N.Z,{children:"Quantity"})]})}),(0,i.jsx)(g.Z,{children:l.map((e,t)=>(0,i.jsxs)(c.E.tr,{initial:{x:"-20vw"},animate:{x:-10},onMouseEnter:()=>E(e),onClick:t=>_(e,t),style:{cursor:"pointer"},children:[(0,i.jsx)(N.Z,{children:e.name}),(0,i.jsx)(N.Z,{children:e.quantity})]},t))})]}),(0,i.jsx)(o.Z,{className:"App-button",onClick:()=>{t(l),f(!1)},disabled:5!==O,variant:"contained",color:"primary",style:{marginTop:"20px",padding:"10px",cursor:5!==O?"not-allowed":"pointer"},children:"Create Game"})]})]})})};var f=n(5786),E=n(8038),x=n(3983),_=n(4548),O=n(5870),A=n(6065),q=n(8644);n(1276);let C=e=>{let{newTripleTriadGame:t}=e,[n,a]=(0,r.useState)([]),[l,s]=(0,r.useState)(""),[o,u]=(0,r.useState)("Easy Bot"),[d,c]=(0,r.useState)(!1),[h,p]=(0,r.useState)("Select Cards"),b=e=>{let t=n.includes(e)?n.filter(t=>t!==e):[...n,e];a(t),t.includes("Random")?(c(!1),p("Create Game")):p("Select Cards")};return(0,i.jsxs)("div",{className:"game-settings",children:[(0,i.jsxs)("div",{className:"settings-container",children:[(0,i.jsxs)("div",{className:"select-rules",children:[(0,i.jsx)("h3",{children:"1. Select Rules"}),(0,i.jsx)("div",{className:"rules-checkboxes",children:["Same","Same Wall","Plus","Elemental","Open","Random","Sudden Death"].map(e=>(0,i.jsx)("div",{children:(0,i.jsx)(E.Z,{control:(0,i.jsx)(f.Z,{value:e,checked:n.includes(e),onChange:()=>b(e)}),label:e},e)},e))})]}),(0,i.jsxs)("div",{className:"select-opponent",children:[(0,i.jsx)("h3",{children:"2. Select Opponent"}),(0,i.jsx)(x.Z,{label:"Type to search opponents",variant:"outlined",value:l,onChange:e=>{s(e.target.value)},fullWidth:!0}),(0,i.jsx)(m.Z,{mt:2,children:(0,i.jsxs)(q.Z,{variant:"outlined",fullWidth:!0,children:[(0,i.jsx)(A.Z,{id:"select-opponent-label",children:"Selected Opponent"}),(0,i.jsx)(_.Z,{labelId:"select-opponent-label",value:o,onChange:e=>{u(e.target.value)},label:"Selected Opponent",children:["Easy Bot","Medium Bot","Hard Bot","UserOne","UserTwo"].filter(e=>e.includes(l)).map(e=>(0,i.jsx)(O.Z,{value:e,children:e},e))})]})}),o&&(0,i.jsxs)("div",{children:[(0,i.jsx)("h3",{children:"3. Select Cards or Start Game"}),(0,i.jsx)("button",{className:"App-button",onClick:()=>{"Select Cards"===h?c(!0):t()},children:h})]})]})]}),(0,i.jsx)("div",{className:"select-cards",children:d&&(0,i.jsx)(v,{newTripleTriadGame:t})})]})},j=["Geezard","Funguar","Blood Soul","Caterchipillar","Trustaevis","Anacondaur","Tri-Face","Fastitocalon","Abyss Worm","Turtapod","Imp","Blue Dragon","Elastoid","GIM47M","Elnoyle","X-ATM092","Shumi Tribe","Krysta","Tiamat","BGH251F2","MiniMog","Chicobo","Carbuncle","Diablos","Bahamut","Doomtrain","Irvine","Zell","Bite Bug","Red Bat","Cockatrice","Grat","Creeps","Grendel","Snow Lion","Ochu","Vysage","T-Rexaur","Adamantoise","Hexadragon","Malboro","Ruby Dragon","Granaldo","Gerogero","Propagator","Jumbo Cactuar","Red Giant","Catoblepas","Quezacotl","Shiva","Leviathan","Odin","Eden","Ward","Rinoa","Edea","Blobra","Gayla","Buel","Mesmerize","Jelleye","Grand Mantis","SAM08G","Death Claw","Bomb","Blitz","Iron Giant","Behemoth","Elvoret","Tonberry King","Iguion","Abadon","Tri-Point","Gargantua","Ultima Weapon","Chubby Chocobo","Ifrit","Siren","Pandemona","Cerberus","Kiros","Laguna","Seifer","Squall","Gesper","Fastitocalon-F","Glacial Eye","Belhelmel","Forbidden","Armadodo","Cactuar","Tonberry","Wendigo","Torama","Chimera","PuPu","Biggs / Wedge","Fujin / Raijin","Trauma","Oilboyle","Mobile Type 8","Sphinxara","Angelo","Gilgamesh","Minotaur","Sacred","Alexander","Phoenix","Selphie","Quistis","hidden_card"],w=Object.freeze({FIRE:"FIRE",ICE:"ICE",THUNDER:"THUNDER",EARTH:"EARTH",POISON:"POISON",WATER:"WATER",WIND:"WIND",HOLY:"HOLY",NONE:"none"}),S=Object.fromEntries([{id:0,name:"Blank",numbers:["A","A","A","A"],element:w.NONE,level:1},{id:1,name:"Geezard",numbers:[1,5,4,1],element:w.NONE,level:1},{id:2,name:"Funguar",numbers:[5,3,1,1],element:w.NONE,level:1},{id:3,name:"Bite Bug",numbers:[1,5,3,3],element:w.NONE,level:1},{id:4,name:"Red Bat",numbers:[6,2,1,1],element:w.NONE,level:1},{id:5,name:"Blobra",numbers:[2,5,3,1],element:w.NONE,level:1},{id:6,name:"Gayla",numbers:[2,4,1,4],element:w.THUNDER,level:1},{id:7,name:"Gesper",numbers:[1,1,5,4],element:w.NONE,level:1},{id:8,name:"Fastitocalon-F",numbers:[3,1,5,2],element:w.EARTH,level:1},{id:9,name:"Blood Soul",numbers:[2,1,1,6],element:w.NONE,level:1},{id:10,name:"Caterchipillar",numbers:[4,3,2,4],element:w.NONE,level:1},{id:11,name:"Cockatrice",numbers:[2,6,1,2],element:w.THUNDER,level:1},{id:12,name:"Grat",numbers:[7,1,1,3],element:w.NONE,level:2},{id:13,name:"Buel",numbers:[6,3,2,2],element:w.NONE,level:2},{id:14,name:"Mesmerize",numbers:[5,4,3,3],element:w.NONE,level:2},{id:15,name:"Glacial Eye",numbers:[6,3,1,4],element:w.ICE,level:2},{id:16,name:"Belhelmel",numbers:[3,3,4,5],element:w.NONE,level:2},{id:17,name:"Thrustaevis",numbers:[5,5,3,2],element:w.WIND,level:2},{id:18,name:"Anacondaur",numbers:[5,5,1,3],element:w.POISON,level:2},{id:19,name:"Creeps",numbers:[5,2,2,5],element:w.THUNDER,level:2},{id:20,name:"Grendel",numbers:[4,2,4,5],element:w.THUNDER,level:2},{id:21,name:"Jelleye",numbers:[3,7,2,1],element:w.NONE,level:2},{id:22,name:"Grand Mantis",numbers:[5,3,2,5],element:w.NONE,level:2},{id:23,name:"Forbidden",numbers:[6,2,6,3],element:w.NONE,level:3},{id:24,name:"Armadodo",numbers:[6,6,3,1],element:w.EARTH,level:3},{id:25,name:"Tri-Face",numbers:[3,5,5,5],element:w.POISON,level:3},{id:26,name:"Fastitocalon",numbers:[7,3,5,1],element:w.EARTH,level:3},{id:27,name:"Snow Lion",numbers:[7,3,1,5],element:w.ICE,level:3},{id:28,name:"Ochu",numbers:[5,3,6,3],element:w.NONE,level:3},{id:29,name:"SAM08G",numbers:[5,4,6,2],element:w.FIRE,level:3},{id:30,name:"Death Claw",numbers:[4,2,4,7],element:w.FIRE,level:3},{id:31,name:"Cactuar",numbers:[6,3,2,6],element:w.NONE,level:3},{id:32,name:"Tonberry",numbers:[3,4,6,4],element:w.NONE,level:3},{id:33,name:"Abyss Worm",numbers:[7,5,2,3],element:w.EARTH,level:3},{id:34,name:"Turtapod",numbers:[2,7,3,6],element:w.NONE,level:4},{id:35,name:"Vysage",numbers:[6,5,5,4],element:w.NONE,level:4},{id:36,name:"T-Rexaur",numbers:[4,7,6,2],element:w.NONE,level:4},{id:37,name:"Bomb",numbers:[2,3,7,6],element:w.FIRE,level:4},{id:38,name:"Blitz",numbers:[1,7,6,4],element:w.THUNDER,level:4},{id:39,name:"Wendigo",numbers:[7,6,3,1],element:w.NONE,level:4},{id:40,name:"Torama",numbers:[7,4,4,4],element:w.NONE,level:4},{id:41,name:"Imp",numbers:[3,6,7,3],element:w.NONE,level:4},{id:42,name:"Blue Dragon",numbers:[6,3,2,7],element:w.POISON,level:4},{id:43,name:"Adamantoise",numbers:[4,6,5,5],element:w.EARTH,level:4},{id:44,name:"Hexadragon",numbers:[7,3,5,4],element:w.FIRE,level:4},{id:45,name:"Iron Giant",numbers:[6,5,5,6],element:w.NONE,level:5},{id:46,name:"Behemoth",numbers:[3,7,6,5],element:w.NONE,level:5},{id:47,name:"Chimera",numbers:[7,3,6,5],element:w.WATER,level:5},{id:48,name:"PuPu",numbers:[3,1,"A",2],element:w.NONE,level:5},{id:49,name:"Elastoid",numbers:[6,7,2,6],element:w.NONE,level:5},{id:50,name:"GIM47N",numbers:[5,4,5,7],element:w.NONE,level:5},{id:51,name:"Malboro",numbers:[7,2,7,4],element:w.POISON,level:5},{id:52,name:"Ruby Dragon",numbers:[7,4,2,7],element:w.FIRE,level:5},{id:53,name:"Elnoyle",numbers:[5,6,3,7],element:w.NONE,level:5},{id:54,name:"Tonberry King",numbers:[4,4,6,7],element:w.NONE,level:5},{id:55,name:"Wedge, Biggs",numbers:[6,7,6,2],element:w.NONE,level:5},{id:56,name:"Fujin Raijin",numbers:[2,4,8,8],element:w.NONE,level:6},{id:57,name:"Elvoret",numbers:[7,4,8,3],element:w.WIND,level:6},{id:58,name:"X-ATM092",numbers:[4,3,8,7],element:w.NONE,level:6},{id:59,name:"Granaldo",numbers:[7,5,2,8],element:w.NONE,level:6},{id:60,name:"Gerogero",numbers:[1,3,8,8],element:w.POISON,level:6},{id:61,name:"Iguion",numbers:[8,2,2,8],element:w.NONE,level:6},{id:62,name:"Abadon",numbers:[6,5,8,4],element:w.NONE,level:6},{id:63,name:"Trauma",numbers:[4,6,8,5],element:w.NONE,level:6},{id:64,name:"Oilboyle",numbers:[1,8,8,4],element:w.NONE,level:6},{id:65,name:"Shumi",numbers:[6,4,5,8],element:w.NONE,level:6},{id:66,name:"Krysta",numbers:[7,1,5,8],element:w.NONE,level:6},{id:67,name:"Propagator",numbers:[8,8,4,4],element:w.NONE,level:7},{id:68,name:"Jumbo Cactuar",numbers:[8,4,8,4],element:w.NONE,level:7},{id:69,name:"Tri-Point",numbers:[8,8,5,2],element:w.THUNDER,level:7},{id:70,name:"Gargantua",numbers:[5,8,6,6],element:w.NONE,level:7},{id:71,name:"Mobile Type 8",numbers:[8,3,6,7],element:w.NONE,level:7},{id:72,name:"Sphinxara",numbers:[8,8,3,5],element:w.NONE,level:7},{id:73,name:"Tiamat",numbers:[8,4,8,5],element:w.NONE,level:7},{id:74,name:"BGH251F2",numbers:[5,5,7,8],element:w.NONE,level:7},{id:75,name:"Red Giant",numbers:[6,7,8,4],element:w.NONE,level:7},{id:76,name:"Catoblepas",numbers:[1,7,8,7],element:w.NONE,level:7},{id:77,name:"Ultima Weapon",numbers:[7,8,7,2],element:w.NONE,level:7},{id:78,name:"Chubby Chocobo",numbers:[4,9,4,8],element:w.NONE,level:8},{id:79,name:"Angelo",numbers:[9,3,6,7],element:w.NONE,level:8},{id:80,name:"Gilgamesh",numbers:[3,6,7,9],element:w.NONE,level:8},{id:81,name:"MiniMog",numbers:[9,2,3,9],element:w.NONE,level:8},{id:82,name:"Chicobo",numbers:[9,4,4,8],element:w.NONE,level:8},{id:83,name:"Quezacotl",numbers:[2,4,9,9],element:w.THUNDER,level:8},{id:84,name:"Shiva",numbers:[6,9,7,4],element:w.ICE,level:8},{id:85,name:"Ifrit",numbers:[9,8,6,2],element:w.FIRE,level:8},{id:86,name:"Siren",numbers:[8,2,9,6],element:w.NONE,level:8},{id:87,name:"Sacred",numbers:[5,9,1,9],element:w.EARTH,level:8},{id:88,name:"Minotaur",numbers:[9,9,5,2],element:w.EARTH,level:8},{id:89,name:"Carbuncle",numbers:[8,4,4,"A"],element:w.NONE,level:9},{id:90,name:"Diablos",numbers:[5,3,"A",8],element:w.NONE,level:9},{id:91,name:"Leviathan",numbers:[7,7,"A",1],element:w.WATER,level:9},{id:92,name:"Odin",numbers:[8,5,"A",3],element:w.NONE,level:9},{id:93,name:"Pandemona",numbers:["A",7,1,7],element:w.WIND,level:9},{id:94,name:"Cerberus",numbers:[7,"A",4,6],element:w.NONE,level:9},{id:95,name:"Alexander",numbers:[9,2,"A",4],element:w.HOLY,level:9},{id:96,name:"Phoenix",numbers:[7,"A",2,7],element:w.FIRE,level:9},{id:97,name:"Bahamut",numbers:["A",6,8,2],element:w.NONE,level:9},{id:98,name:"Doomtrain",numbers:[3,"A",1,"A"],element:w.POISON,level:9},{id:99,name:"Eden",numbers:[4,"A",4,9],element:w.NONE,level:9},{id:100,name:"Ward",numbers:["A",8,7,2],element:w.NONE,level:"A"},{id:101,name:"Kiros",numbers:[6,"A",7,6],element:w.NONE,level:"A"},{id:102,name:"Laguna",numbers:[5,9,"A",3],element:w.NONE,level:"A"},{id:103,name:"Selphie",numbers:["A",4,8,6],element:w.NONE,level:"A"},{id:104,name:"Quistis",numbers:[9,2,6,"A"],element:w.NONE,level:"A"},{id:105,name:"Irvine",numbers:[2,"A",6,9],element:w.NONE,level:"A"},{id:106,name:"Zell",numbers:[8,6,5,"A"],element:w.NONE,level:"A"},{id:107,name:"Rinoa",numbers:[4,"A","A",2],element:w.NONE,level:"A"},{id:108,name:"Edea",numbers:["A",3,"A",3],element:w.NONE,level:"A"},{id:109,name:"Seifer",numbers:[6,4,9,"A"],element:w.NONE,level:"A"},{id:110,name:"Squall",numbers:["A",9,4,6],element:w.NONE,level:"A"},{id:110,name:"hidden_card",numbers:["A","A","A","A"],element:w.NONE,level:"A"}].map(e=>[e.name,e]));function T(e){return j.indexOf(e)}class I{constructor(e,t,n,i=0,r=0){this.name=e,this.originalColor=t,this.color=t,this.index=n,this.row=i,this.col=r,this.frameNumber=T(e),this.image=null,this.numbers=({hidden_card:["A","A","A","A"],Cockatrice:[2,6,1,2],Caterchipillar:[4,3,2,4],"Blood Soul":[2,1,1,6],"Fastitocalon-F":[3,1,5,2],Gesper:[1,1,5,4],Gayla:[2,4,1,4],Blobra:[2,5,3,1],"Red Bat":[6,2,1,1],"Bite Bug":[1,5,3,3],Funguar:[5,3,1,1],Geezard:[1,5,4,1],"Grand Mantis":[5,3,2,5],Jelleye:[3,7,2,1],Grendel:[4,2,4,5],Creeps:[5,2,2,5],Anacondaur:[5,5,1,3],Trustaevis:[5,5,3,2],Belhelmel:[3,3,4,5],"Glacial Eye":[6,3,1,4],Mesmerize:[5,4,3,3],Buel:[6,3,2,2],Grat:[7,1,1,3],"Abyss Worm":[7,5,2,3],Tonberry:[3,4,6,4],Cactuar:[6,3,2,6],"Death Claw":[4,2,4,7],SAM08G:[5,4,6,2],Ochu:[5,3,6,3],"Snow Lion":[7,3,1,5],Fastitocalon:[7,3,5,1],"Tri-Face":[3,5,5,5],Armadodo:[6,6,3,1],Forbidden:[6,2,6,3],Hexadragon:[7,3,5,4],Adamantoise:[4,6,5,5],"Blue Dragon":[6,3,2,7],Imp:[3,6,7,3],Torama:[7,4,4,4],Wendigo:[7,6,3,1],Blitz:[1,7,6,4],Bomb:[2,3,7,6],"T-Rexaur":[4,7,6,2],Vysage:[6,5,5,4],Turtapod:[2,7,3,6],"Biggs / Wedge":[6,7,6,2],"Tonberry King":[4,4,6,7],Elnoyle:[5,6,3,7],"Ruby Dragon":[7,4,2,7],Malboro:[7,2,7,4],GIM47M:[5,4,5,7],Elastoid:[6,7,2,6],PuPu:[3,1,"A",2],Chimera:[7,3,6,5],Behemoth:[3,7,6,5],"Iron Giant":[6,5,5,6],Krysta:[7,1,5,8],"Shumi Tribe":[6,4,5,8],Oilboyle:[1,8,8,4],Trauma:[4,6,8,5],Abadon:[6,5,8,4],Iguion:[8,2,2,8],Gerogero:[1,3,8,8],Granaldo:[7,5,2,8],"X-ATM092":[4,3,8,7],Elvoret:[7,4,8,3],"Fujin / Raijin":[2,4,8,8],"Ultima Weapon":[7,8,7,2],Catoblepas:[1,7,8,7],"Red Giant":[6,7,8,4],BGH251F2:[5,5,7,8],Tiamat:[8,4,8,5],Sphinxara:[8,8,3,5],"Mobile Type 8":[8,3,6,7],Gargantua:[5,8,6,6],"Tri-Point":[8,8,5,2],"Jumbo Cactuar":[8,4,8,4],Propagator:[8,8,4,4],Minotaur:[9,9,5,2],Sacred:[5,9,1,9],Siren:[8,2,9,6],Ifrit:[9,8,6,2],Shiva:[6,9,7,4],Quezacotl:[2,4,9,9],Chicobo:[9,4,4,8],MiniMog:[9,2,3,9],Gilgamesh:[3,6,7,9],Angelo:[9,3,6,7],"Chubby Chocobo":[4,9,4,8],Eden:[4,"A",4,9],Doomtrain:[3,"A",1,"A"],Bahamut:["A",6,8,2],Phoenix:[7,"A",2,7],Alexander:[9,2,"A",4],Cerberus:[7,"A",4,6],Pandemona:["A",7,1,7],Odin:[8,5,"A",3],Leviathan:[7,7,"A",1],Diablos:[5,3,"A",8],Carbuncle:[8,4,4,"A"],Squall:["A",9,4,6],Seifer:[6,4,9,"A"],Edea:["A",3,"A",3],Rinoa:[4,"A","A",2],Zell:[8,6,5,"A"],Irvine:[2,"A",6,9],Quistis:[9,2,6,"A"],Selphie:["A",4,8,6],Laguna:[5,9,"A",3],Kiros:[6,"A",7,6],Ward:["A",8,7,2]})[e],this.up=this.numbers[0],this.left=this.numbers[1],this.right=this.numbers[2],this.down=this.numbers[3],this.id=Math.random(),this.src="/img/all_cards.png",this.alt=e,this.played=!1,this.placed=!1;let{x:a,y:l}=function(e){let t=T(e),n=Math.ceil(t/28);return{x:(t-28*(n-1))*64,y:(n-1)*64}}(e);this.x=a,this.y=l,this.width=64,this.height=64}toString(){return`FrontendCard(name: ${this.name}, color: ${this.color})`}static fromCardHandArray(e,t){return e.map(e=>new I(e.cardId,t,e.index))}}class G{constructor(e){this.position=e,this.id="Blank",this.original_color="",this.color="",this.active=!1,this.element=w.NONE,this.numbers=[],this.original_numbers=[]}updateNumbers(e){this.numbers=this.numbers.map(t=>{let n=("A"!==t?t:10)+e;return n>=10?"A":n})}assignCard(e,t){this.id=e,this.original_color=t,this.color=t,this.element=S[e].element,this.numbers=[...S[e].numbers],this.original_numbers=[...S[e].numbers]}isBlank(){return""===this.id||"Blank"===this.id}toString(){return`${this.id} (${this.color}) (${this.position})`}update(e,t,n){this.id=e,this.original_color=t,this.color=n}flipColor(){this.color=this.color===H.RED?H.BLUE:H.RED}flip(){this.flipColor(),this.active=!0}doneFlipping(){this.active=!1}_toNumber(e){return"A"===e?10:e}sameSide(e){return this.color===e.color}isNeighbor(e){return Math.abs(this.position.row-e.position.row)+Math.abs(this.position.col-e.position.col)===1}getDirection(e){let t=[e.position.row-this.position.row,e.position.col-this.position.col];if(0===t[0]&&1===t[1])return $.RIGHT;if(1===t[0]&&0===t[1])return $.DOWN;if(0===t[0]&&-1===t[1])return $.LEFT;if(-1===t[0]&&0===t[1])return $.UP;throw Error(`Invalid direction ${t}`)}sameEdge(e){if(!this.isNeighbor(e))return!1;let t=this.getDirection(e);if(t===$.RIGHT)return this.rightOriginalNumber===e.leftOriginalNumber;if(t===$.DOWN)return this.downOriginalNumber===e.upOriginalNumber;if(t===$.LEFT)return this.leftOriginalNumber===e.rightOriginalNumber;if(t===$.UP)return this.upOriginalNumber===e.downOriginalNumber;throw Error(`Invalid direction ${t}`)}sumEdge(e){if(!this.isNeighbor(e))return 0;let t=this.getDirection(e);if(t===$.RIGHT)return this.rightOriginalNumber+e.leftOriginalNumber;if(t===$.DOWN)return this.downOriginalNumber+e.upOriginalNumber;if(t===$.LEFT)return this.leftOriginalNumber+e.rightOriginalNumber;if(t===$.UP)return this.upOriginalNumber+e.downOriginalNumber;throw Error(`Invalid direction ${t}`)}get up(){return this.numbers[0]||0}get right(){return this.numbers[2]||0}get down(){return this.numbers[3]||0}get left(){return this.numbers[1]||0}get upNumber(){return this._toNumber(this.numbers[0])}get rightNumber(){return this._toNumber(this.numbers[2])}get downNumber(){return this._toNumber(this.numbers[3])}get leftNumber(){return this._toNumber(this.numbers[1])}get upOriginalNumber(){return this._toNumber(this.original_numbers[0])}get rightOriginalNumber(){return this._toNumber(this.original_numbers[2])}get downOriginalNumber(){return this._toNumber(this.original_numbers[3])}get leftOriginalNumber(){return this._toNumber(this.original_numbers[1])}get upOriginal(){return this.original_numbers[0]||0}get rightOriginal(){return this.original_numbers[2]||0}get downOriginal(){return this.original_numbers[3]||0}get leftOriginal(){return this.original_numbers[1]||0}}class B{constructor(e,t,n){this.flipper=e,this.targets=t,this.rule=n}toString(){return`${this.flipper} ${this.rule} flipped ${this.targets}`}}class F{constructor(e,t,n){if(new.target===F)throw TypeError("Cannot construct Rule instances directly");this.priority=e,this.ruleName=t,this.checkCombo=n}flip(e,t){throw Error("Method 'flip()' must be implemented.")}canFlipSingle(e,t){throw Error("Method 'canFlipSingle()' must be implemented.")}canFlipPair(e,t){throw Error("Method 'canFlipPair()' must be implemented.")}getPairs(e){let t=[];for(let n=0;n<e.length;n++)for(let i=n+1;i<e.length;i++)t.push([e[n],e[i]]);return t}}class R extends F{constructor(){super(1,"Basic",!1)}canFlipSingle(e,t){if(e.sameSide(t)||!e.isNeighbor(t))return!1;let n=[t.position.row-e.position.row,t.position.col-e.position.col];if(0===n[0]&&1===n[1])return e.rightNumber>t.leftNumber;if(1===n[0]&&0===n[1])return e.downNumber>t.upNumber;if(0===n[0]&&-1===n[1])return e.leftNumber>t.rightNumber;if(-1===n[0]&&0===n[1])return e.upNumber>t.downNumber;throw Error(`Invalid direction ${n}`)}canFlipPair(e,t){return!1}flip(e,t){let n=[];for(let i of t)this.canFlipSingle(e,i)&&(i.flip(),n.push(new B(e,[i],this.name)));return e.doneFlipping(),[n,[]]}}class k extends R{static #e=this.priority=2;static #t=this.ruleName="Combo";static #n=this.checkCombo=!0;canFlipSingle(e,t){return super.canFlipSingle(e,t)}flip(e,t){let[n,i]=super.flip(e,t),r=[];for(let e of n)r.push(...e.targets);return[n,r]}}class P extends F{static #e=this.priority=4;static #t=this.ruleName="Same";static #n=this.checkCombo=!0;constructor(e){super(),this.wall=!1,this.wall=e}canFlipSingle(e,t){return!1}canFlipPair(e,t){return e.sameEdge(t[0])&&e.sameEdge(t[1])}_flipGivenPairs(e,t){let n=[],i=new Set,r=[];for(let a of t)if(this.canFlipPair(e,a)){let t=[];for(let n of a)e.sameSide(n)||(n.flip(),t.push(n));for(let a of(n.push(new B(e,t,this.constructor.name)),t))i.has(a.position)||(i.add(a.position),r.push(a));i.has(e.position)||(i.add(e.position),r.push(e))}return[n,r]}_getWallCards(e){let t=[];for(let[n,i]of[[0,1],[1,0],[0,-1],[-1,0]]){let r=e.position.row+n,a=e.position.col+i;if(!(0<=r&&r<3&&0<=a&&a<3)){let e=new G(new Z(r,a));e.assignCard("Blank",""),t.push(e)}}return t}_getWallPairs(e,t){let n=this._getWallCards(e),i=this.getPairs(t);for(let e of n)for(let n of t)i.push([e,n]);return i}flip(e,t){let n=[];return n=this.wall?this._getWallPairs(e,t):this.getPairs(t),this._flipGivenPairs(e,n)}}class D extends F{static #e=this.priority=3;static #t=this.ruleName="Plus";static #n=this.checkCombo=!0;canFlipSingle(e,t){return!1}canFlipPair(e,t){return e.sumEdge(t[0])===e.sumEdge(t[1])}flip(e,t){let n=[],i=new Set,r=[];for(let a of this.getPairs(t))if(this.canFlipPair(e,a)){let t=[];for(let n of a)e.sameSide(n)||(n.flip(),t.push(n));for(let a of(n.push(new B(e,t,this.constructor.name)),t))i.has(a.position)||(i.add(a.position),r.push(a));i.has(e.position)||(i.add(e.position),r.push(e))}return[n,r]}}class Z{constructor(e,t){this.row=e,this.col=t}hashCode(){return`${this.row},${this.col}`}equals(e){return e instanceof Z&&this.row===e.row&&this.col===e.col}}class M{constructor({element:e,position:t}){this.element=e,this.position=t}}class W extends F{static #e=this.priority=0;constructor(e){super(),this.elementPositions=e}apply(e){for(let t of this.elementPositions)if(e.position.equals(t.position)){e.updateNumbers(e.element===t.element?1:-1);break}}canFlipPair(e,t){return!1}canFlipSingle(e,t){return!1}flip(e,t){return[[],[]]}}let H=Object.freeze({RED:"red",BLUE:"blue"}),$=Object.freeze({UP:"up",RIGHT:"right",DOWN:"down",LEFT:"left"});class L{constructor(e){this.cardId=e.cardId,this.color=e.color,this.index=e.index,this.played=e.played}hashCode(){return`${this.cardId},${this.color},${this.index},${this.played}`}equals(e){return e instanceof L&&this.cardId===e.cardId&&this.color===e.color&&this.index===e.index&&this.played===e.played}}class U{constructor({id:e,color:t,deck:n=null}){this.id=e,this.color=t,this.deck=n||Array.from({length:5},(e,t)=>new L({cardId:"Blank",color:this.color,index:t,played:!1}))}getCard(e){return this.deck[e]}playCard(e){this.deck[e].played=!0}hasCard(e){return!this.deck[e].played}hashCode(){return`${this.id},${this.color},${this.deck.map(e=>e.hashCode()).join(",")}`}equals(e){return e instanceof U&&this.id===e.id&&this.color===e.color&&this.deck.length===e.deck.length&&this.deck.every((t,n)=>t.equals(e.deck[n]))}}class z{constructor(e,t){for(let t of(this.board=Array.from({length:3},(e,t)=>Array.from({length:3},(e,n)=>new G(new Z(t,n)))),this.scores={[H.BLUE]:5,[H.RED]:5},this.rules=e,this.plus_rule=null,this.same_rule=null,this.rules))t instanceof D?this.plus_rule=t:t instanceof P&&(this.same_rule=t);this.player_ids=t,this.blue_player=new U({id:this.player_ids[1],color:H.BLUE}),this.red_player=new U({id:this.player_ids[0],color:H.RED})}getBotDeck(){return this.red_player.deck}getPlayerDeck(e){return this._get_player_from_id(e).deck}_get_player_from_id(e){if(e===this.blue_player.id)return this.blue_player;if(e===this.red_player.id)return this.red_player;throw Error(`Player with id ${e} not found in the game's players: ${this.player_ids}`)}updatePlayerDeck(e,t){let n=this._get_player_from_id(e);n.deck=t.map((e,t)=>new L({cardId:e,color:n.color,index:t,played:!1}))}_has_plus_rule(){return null!==this.plus_rule}_has_same_rule(){return null!==this.same_rule}apply_elemental_rule_if_applicable(e){for(let t of this.rules)t instanceof W&&t.apply(e)}_no_high_priority_rules(){return this.rules.every(e=>e.priority<2)}get_card(e,t){return this.board[e][t]}_get_card_from_position(e){return this.board[e.row][e.col]}display_card(e){let t=this.COLOR_TO_COLOR_CODE[e.color];return`${" ".repeat(8)}
${t}${e.id.slice(0,7).padStart(8)}${this.RESET_CODE}
${" ".repeat(8)}
${e.up_original.toString().padStart(8)}
${e.left_original.toString().padEnd(3)}${e.right_original.toString().padStart(5)}
${e.down_original.toString().padStart(8)}
${" ".repeat(8)}`}display(){this.RESET_CODE="\x1b[0m",this.board.map(e=>{let t=e.map(e=>this.display_card(e).split("\n"));return t[0].map((e,n)=>t.map(e=>e[n])).map(e=>e.join(" | "))}).forEach(e=>{e.forEach(e=>console.log(e)),console.log()})}getScores(){return this.scores}isGameOver(){return this.board.every(e=>e.every(e=>"Blank"!==e.id))}get_winner_id(){if(this.isGameOver()){let e=Object.keys(this.scores).reduce((e,t)=>this.scores[e]>this.scores[t]?e:t);return 5===this.scores[e]?"":e}return""}_update_scores(){let e={[H.BLUE]:0,[H.RED]:0};this.board.forEach(t=>{t.forEach(t=>{t.isBlank()||(e[t.color]+=1)})});let t=Math.floor((10-Object.values(e).reduce((e,t)=>e+t,0))/2),n=this._get_player_from_id(this.player_ids[0]);this.scores[n.color]=t+e[n.color];let i=n.color===H.BLUE?H.RED:H.BLUE;this.scores[i]=10-this.scores[n.color]}_is_valid_move(e,t,n){return console.log("..._is_valid_move",n),console.log("..._is_valid_move",e,t,this.board),"Blank"===this.board[t.row][t.col].id&&e.hasCard(n)}placeMove(e,t,n){let i=this._get_player_from_id(e);if(this._is_valid_move(i,t,n)){let e=i.getCard(n);i.playCard(n),this.board[t.row][t.col].assignCard(e.cardId,i.color),this.board[t.row][t.col].id=e.cardId,this.board[t.row][t.col].original_color=i.color,this.board[t.row][t.col].color=i.color,this.board[t.row][t.col].element=S[e.cardId].element,this.board[t.row][t.col].numbers=S[e.cardId].numbers,this.board[t.row][t.col].original_numbers=S[e.cardId].numbers;let r=this.board[t.row][t.col];this.apply_elemental_rule_if_applicable(r);let a=this.flip_cards(r);return this._update_scores(),a}throw Error("Invalid move: player=",i,t,n)}flip_cards(e){let t=this._get_neighbor_cards(e);if(this._no_high_priority_rules())return new R().flip(e,t);let n=[],i=[];if(this._has_plus_rule()?([n,i]=this.plus_rule.flip(e,t),0===i.length&&this._has_same_rule()&&([n,i]=this.same_rule.flip(e,t))):this._has_same_rule()&&([n,i]=this.same_rule.flip(e,t)),0===i.length)return new R().flip(e,t)[0];for(;i.length>0;){let e=i.pop(),t=this._get_neighbor_cards(e),[r,a]=new k().flip(e,t);n=n.concat(r),i=i.concat(a)}return n}_get_neighbor_positions(e){let t=[];for(let[n,i]of[[0,1],[1,0],[0,-1],[-1,0]]){let r=e.position.row+n,a=e.position.col+i;0<=r&&r<3&&0<=a&&a<3&&"Blank"!==this._get_card_from_position(new Z(r,a)).id&&t.push(new Z(r,a))}return t}_get_neighbor_cards(e){return this._get_neighbor_positions(e).map(e=>this._get_card_from_position(e))}}class K{constructor(e){console.log("Call MatchService constructor"),this.game=e}getBotDeckIfNecessary(){let e=this.game.player_ids[1],t=["Alexander","Iguion","Geezard","Glacial Eye","Blobra"];return this.game.updatePlayerDeck(e,t),t}updatePlayerDeck(e,t){this.game.updatePlayerDeck(e,t)}getPlayerDeck(e){let t=this.game.getPlayerDeck(e);return I.fromCardHandArray(t,0===e?"red":"blue")}placeMove(e,t,n){return this.game.placeMove(e,t,n)}getBotDeck(){let e=this.game.getBotDeck();return I.fromCardHandArray(e,"red")}getScores(){return this.game.getScores()}isGameOver(){return this.game.isGameOver()}}let Q=function(){let e=[new P({wall:!0}),new D,new W([new M({element:w.FIRE,position:new Z(1,1)}),new M({element:w.ICE,position:new Z(2,2)})]),new R],[t,n]=(0,r.useState)(!0),[a,s]=(0,r.useState)(null),[o,m]=(0,r.useState)([]),[u,c]=(0,r.useState)([]),[h,p]=(0,r.useState)([]),[b,g]=(0,r.useState)({blue:5,red:5}),[y,N]=(0,r.useState)(""),[v,f]=(0,r.useState)(!1),E=(0,l.s0)(),x={LEFT:"left",RIGHT:"right"},[_,O]=(0,r.useState)(x.LEFT),[A,q]=(0,r.useState)(null),[j,S]=(0,r.useState)(null),[T,G]=(0,r.useState)(null),B=e=>{console.log("Continue to handle selected card "+e.alt)},F=e=>{console.log("Choice one deck for left: "+e.alt),_===x.LEFT&&!1===e.played?(q(e),B(e)):console.log("Not your turn or invalid card")},k=e=>{console.log("Choice one deck for right: "+e.alt),_===x.RIGHT&&!1===e.played?(S(e),B(e)):console.log("Not your turn or invalid card")},H=()=>{_===x.LEFT?(O(x.RIGHT),q(null)):_===x.RIGHT?(O(x.LEFT),S(null)):console.log("Invalid currentTurn: "+_)},$=()=>{var e;return _===x.LEFT?null!==A&&(e=A,c(u.map(t=>t.id===e.id?{...t,played:!0}:t))):_===x.RIGHT?null!==j&&(e=j,p(h.map(t=>t.id===e.id?{...t,played:!0}:t))):console.log("Invalid currentTurn: "+_),e},L=e=>{if(void 0===$()){console.log("No selected card");return}!0===e.placed?console.log("Invalid card placement"):(console.log("Place card: ",e.row,e.col),G(e))};(0,r.useEffect)(()=>{var e=$();if(void 0===e){console.log("No selected card");return}console.log("Selected card: "+e.alt+" is placed in grid by: "+_+" to "+T.alt),m(o.map(t=>t.id===T.id?{...e,placed:!0,row:T.row,col:T.col}:t))},[T]),(0,r.useEffect)(()=>{var e=$();if(void 0===e){console.log("No selected card");return}let t=a.placeMove("red"===e.color?0:1,new Z(T.row,T.col),e.index),n=[];for(let e of t)for(let t of e.targets)n.some(e=>e.row===t.position.row&&e.col===t.position.col)||n.push(t);console.log("Flip sequences: ",t),setTimeout(()=>{U(n)},500)},[o]);let U=e=>{e.length>0&&(console.log("Flipping cards: ",e),console.log("Current placedCards: ",o),m(o.map(t=>e.some(e=>e.position.row===t.row&&e.position.col===t.col)?{...t,color:_===x.LEFT?"red":"blue"}:t)),g(a.getScores())),H()};(0,r.useEffect)(()=>{null===a?n(!0):(console.log("Game Over: ",a.isGameOver()),f(a.isGameOver()))},[a,_]),(0,r.useEffect)(()=>{a&&a.isGameOver()&&(b.red===b.blue?N("Draw"):b.red>b.blue?N("Red Wins"):N("Blue Wins"),f(!0))},[_]);let Q=()=>{n(!0),E("/triple_triad")};return(0,i.jsxs)("div",{className:"App",children:[t&&(0,i.jsx)(C,{newTripleTriadGame:t=>{console.log("Starting new game with selected cards:",t),O(x.LEFT),q(null),S(null),G(null),g({blue:5,red:5}),N(""),f(!1),n(!1);let i=new K(new z(e,[0,1]));if(s(i),i.updatePlayerDeck(0,["Alexander","Iguion","Geezard","Glacial Eye","Blobra"]),t){let e=[];t.forEach(t=>{for(let n=0;n<t.quantity;n++)e.push(t.name)}),i.updatePlayerDeck(1,e)}else i.updatePlayerDeck(1,["Malboro","Tonberry","T-Rexaur","Grat","Cactuar"]);let r=i.getPlayerDeck(0);console.log("Left deck: "+r);let a=i.getPlayerDeck(1);c(r),p(a);let l=[];for(let e=0;e<3;e++)for(let t=0;t<3;t++)l.push(new I("hidden_card","blue",0,e,t));m(l)}}),!t&&(0,i.jsxs)("div",{children:[(0,i.jsxs)("div",{className:"left-card-deck",children:[u.map((e,t)=>(0,i.jsx)(d,{card:e,handleChoice:F,played:e.played},e.id)),";"]}),(0,i.jsxs)("div",{className:"right-card-deck",children:[h.map((e,t)=>(0,i.jsx)(d,{card:e,handleChoice:k,played:e.played},e.id)),";"]}),(0,i.jsxs)("div",{className:"card-grid",children:[o.map((e,t)=>(0,i.jsx)(d,{card:e,handleChoice:L,played:e.played},e.id)),";"]}),(0,i.jsxs)("div",{className:"scores",children:[(0,i.jsxs)("div",{className:"score-red",children:["Red: ",b.red]}),(0,i.jsxs)("div",{className:"score-blue",children:["Blue: ",b.blue]}),(0,i.jsx)("div",{className:"win-text",children:y}),v&&(0,i.jsx)("button",{onClick:Q,children:"Quit"})," ",(0,i.jsx)("button",{onClick:Q,children:"Quit Debug"})]})]})]})};var J=n(5349),V=n(3180);let X=()=>(0,i.jsxs)("header",{className:"App-header",children:[(0,i.jsx)("div",{className:"logo"}),(0,i.jsx)(c.E.div,{className:"title",initial:{y:-250},animate:{y:-10},children:(0,i.jsx)(J.Z,{sx:{bgcolor:V.Z[500],height:80,width:80},children:(0,i.jsx)("a",{href:"/",style:{textDecoration:"none",color:"inherit"},children:"samaqi"})})})]}),Y=function(){return(0,i.jsxs)("div",{children:[(0,i.jsx)("h1",{children:"Welcome to the World of FFVIII-2"}),(0,i.jsx)("p",{children:"Explore the amazing world of Final Fantasy VIII-2."})]})},ee=function(){return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(X,{}),(0,i.jsx)(a.VK,{children:(0,i.jsx)("div",{className:"App",children:(0,i.jsxs)(l.Z5,{children:[(0,i.jsx)(l.AW,{path:"/",element:(0,i.jsx)(u,{})}),(0,i.jsx)(l.AW,{path:"/triple_triad",element:(0,i.jsx)(Q,{})}),(0,i.jsx)(l.AW,{path:"/world",element:(0,i.jsx)(Y,{})})]})})})]})}},983:()=>{},1276:()=>{},9073:()=>{}}]);